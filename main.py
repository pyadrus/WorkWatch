# -*- coding: utf-8 -*-
import asyncio
import logging
import sys

from aiogram import F
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, Message
from loguru import logger

from database import (RegisterUserBot, recording_data_users_who_launched_bot,
                      registration_user)
from dispatcher import bot, dp, router
from handlers.user.user import register_handlers_at_work
from handlers.user.user_registration import registration_handler_register_user
from keyboards import register_user_keyboard, start_keyboard
from database import db

@dp.message(CommandStart())
async def command_start_handler(message: Message) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É `/start`.

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    :return: None
    """
    id_user = message.from_user.id  # id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ—Ç–ø—Ä–∞–≤–∏–≤—à–µ–≥–æ –∫–æ–º–∞–Ω–¥—É /start
    logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {id_user} –æ—Ç–ø—Ä–∞–≤–∏–ª –∫–æ–º–∞–Ω–¥—É /start')

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ø—Ä–∞–≤–∏–ª –∫–æ–º–∞–Ω–¥—É /start
    recording_data_users_who_launched_bot(message)
    
    db.create_tables([RegisterUserBot])
    user = RegisterUserBot.select().where(RegisterUserBot.id_user == id_user).first()
    
    if user:
        print(user.name, user.surname)
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        text = ('üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –¥–ª—è —É—á–µ—Ç–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –Ω–∞ —Ä–∞–±–æ—á–µ–º –º–µ—Å—Ç–µ!\n\n'
                '–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–≥–∞–µ—Ç —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–∞ —Ä–∞–±–æ—á–µ–º –º–µ—Å—Ç–µ –∏ —É–≤–µ–¥–æ–º–ª—è—Ç—å –∫–æ–ª–ª–µ–≥.\n\n'

                'üìå –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n'
                '‚úÖ "–ù–∞ —Ä–∞–±–æ—Ç–µ" ‚Äî –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏—Ö–æ–¥. –£–∫–∞–∂–∏—Ç–µ –≤–∞—à–∏ –§–ò–û –∏ –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞ (–∏–∑ —Å–ø–∏—Å–∫–∞).\n'
                'üè† "–£—à—ë–ª" ‚Äî –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —É—Ö–æ–¥.\n'
                'üìñ "–°–ø—Ä–∞–≤–∫–∞" ‚Äî –ø–æ–≤—Ç–æ—Ä–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n\n'

                'üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: –ü—Ä–∏ –æ—Ç–º–µ—Ç–∫–µ –ø—Ä–∏—Ö–æ–¥–∞ –∏–ª–∏ —É—Ö–æ–¥–∞ –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–æ–±—â–∏—Ç –æ–± —ç—Ç–æ–º –≤ –æ–±—â–∏–π —á–∞—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.\n'
                'üë• –î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: –î–æ—Å—Ç—É–ø–Ω–∞ –∫–Ω–æ–ø–∫–∞ "–ö—Ç–æ –Ω–∞ —Ä–∞–±–æ—Ç–µ" –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ø–∏—Å–∫–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö. \n'
                '‚ö†Ô∏è –í–∞–∂–Ω–æ: –î–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∫–æ–º–ø–∞–Ω–∏–∏.\n\n'

                ' –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è! üòä')
        await bot.send_message(chat_id=message.chat.id, text=text, reply_markup=start_keyboard())
    else:
        print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        text = ('–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞, –ø—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é')
        await bot.send_message(chat_id=message.chat.id, text=text, reply_markup=register_user_keyboard())


@router.callback_query(F.data == 'back')
async def back_start_handler(callback_query: CallbackQuery, state: FSMContext) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É `/start`.

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    :return: None
    """
    id_user = callback_query.from_user.id  # id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ—Ç–ø—Ä–∞–≤–∏–≤—à–µ–≥–æ –∫–æ–º–∞–Ω–¥—É /start
    logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {id_user} –æ—Ç–ø—Ä–∞–≤–∏–ª –∫–æ–º–∞–Ω–¥—É /start')

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ø—Ä–∞–≤–∏–ª –∫–æ–º–∞–Ω–¥—É /start
    # recording_data_users_who_launched_bot(message)
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    # registration_user(message)

    text = ('üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –¥–ª—è —É—á–µ—Ç–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –Ω–∞ —Ä–∞–±–æ—á–µ–º –º–µ—Å—Ç–µ!\n\n'
            '–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–≥–∞–µ—Ç —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–∞ —Ä–∞–±–æ—á–µ–º –º–µ—Å—Ç–µ –∏ —É–≤–µ–¥–æ–º–ª—è—Ç—å –∫–æ–ª–ª–µ–≥.\n\n'

            'üìå –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n'
            '‚úÖ "–ù–∞ —Ä–∞–±–æ—Ç–µ" ‚Äî –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏—Ö–æ–¥. –£–∫–∞–∂–∏—Ç–µ –≤–∞—à–∏ –§–ò–û –∏ –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞ (–∏–∑ —Å–ø–∏—Å–∫–∞).\n'
            'üè† "–£—à—ë–ª" ‚Äî –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —É—Ö–æ–¥.\n'
            'üìñ "–°–ø—Ä–∞–≤–∫–∞" ‚Äî –ø–æ–≤—Ç–æ—Ä–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n\n'

            'üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: –ü—Ä–∏ –æ—Ç–º–µ—Ç–∫–µ –ø—Ä–∏—Ö–æ–¥–∞ –∏–ª–∏ —É—Ö–æ–¥–∞ –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–æ–±—â–∏—Ç –æ–± —ç—Ç–æ–º –≤ –æ–±—â–∏–π —á–∞—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.\n'
            'üë• –î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: –î–æ—Å—Ç—É–ø–Ω–∞ –∫–Ω–æ–ø–∫–∞ "–ö—Ç–æ –Ω–∞ —Ä–∞–±–æ—Ç–µ" –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ø–∏—Å–∫–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö. \n'
            '‚ö†Ô∏è –í–∞–∂–Ω–æ: –î–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∫–æ–º–ø–∞–Ω–∏–∏.\n\n'

            ' –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è! üòä')
    await bot.send_message(chat_id=callback_query.from_user.id, text=text, reply_markup=start_keyboard())


async def main() -> None:
    """
    –ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞.

    :return: None
    """

    await dp.start_polling(bot)

    register_handlers_at_work()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    registration_handler_register_user()


if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO, stream=sys.stdout)
    asyncio.run(main())
