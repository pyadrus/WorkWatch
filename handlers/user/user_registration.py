# -*- coding: utf-8 -*-
from aiogram import F
from loguru import logger
from dispatcher import bot, router
from database import registration_user
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.state import State, StatesGroup

from keyboards import gender_keyboard, start_keyboard


class RegisterState(StatesGroup):
    name = State()  # –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    surname = State()  # —Ñ–∞–º–∏–ª–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    phone = State()  # –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    gender = State()  # –ø–æ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è


@router.callback_query(F.data == 'registration')
async def registration_user_handler(callback_query: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞–ª–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ ‚Äî –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–º—è"""
    text = ('–î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –∏–º—è')
    await bot.send_message(chat_id=callback_query.from_user.id,
                           text=text)
    await state.set_state(RegisterState.name)


@router.message(RegisterState.name)
async def handle_registration_name(message: Message, state: FSMContext):
    """–ü–æ–ª—É—á–∞–µ–º –∏–º—è, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ñ–∞–º–∏–ª–∏—é"""
    user_name = message.text
    await state.update_data(user_name=user_name)
    text = ('–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é —Ñ–∞–º–∏–ª–∏—é')
    await bot.send_message(chat_id=message.from_user.id,
                           text=text)
    await state.set_state(RegisterState.surname)


@router.message(RegisterState.surname)
async def handle_registration_surname(message: Message, state: FSMContext):
    """–ü–æ–ª—É—á–∞–µ–º —Ñ–∞–º–∏–ª–∏—é, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω"""
    user_surname = message.text
    await state.update_data(user_surname=user_surname)
    text = ('–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞')
    await bot.send_message(chat_id=message.from_user.id,
                           text=text)
    await state.set_state(RegisterState.phone)


@router.message(RegisterState.phone)
async def handle_registration_phone(message: Message, state: FSMContext):
    """–ü–æ–ª—É—á–∞–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª"""
    await state.update_data(user_phone=message.text)
    await bot.send_message(
        chat_id=message.from_user.id,
        text='–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –ø–æ–ª:',
        reply_markup=gender_keyboard()
    )
    await state.set_state(RegisterState.gender)


@router.callback_query(RegisterState.gender)
async def handle_registration_gender(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –ø–æ–ª–∞"""
    gender = '–º—É–∂—Å–∫–æ–π' if callback.data == 'gender_male' else '–∂–µ–Ω—Å–∫–∏–π'
    await state.update_data(user_gender=gender)

    data = await state.get_data()
    user_name = data.get('user_name')
    user_surname = data.get('user_surname')
    user_phone = data.get('user_phone')

    logger.info(f'User: {user_name}, {user_surname}, {user_phone}, {gender}')

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    registration_user(message=callback, name=user_name,
                      surname=user_surname, phone=user_phone, gender=gender)

    await state.clear()

    text = ('üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –¥–ª—è —É—á–µ—Ç–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –Ω–∞ —Ä–∞–±–æ—á–µ–º –º–µ—Å—Ç–µ!\n\n'
            '–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–≥–∞–µ—Ç —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–∞ —Ä–∞–±–æ—á–µ–º –º–µ—Å—Ç–µ –∏ —É–≤–µ–¥–æ–º–ª—è—Ç—å –∫–æ–ª–ª–µ–≥.\n\n'

            'üìå –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n'
            '‚úÖ "–ù–∞ —Ä–∞–±–æ—Ç–µ" ‚Äî –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏—Ö–æ–¥. –£–∫–∞–∂–∏—Ç–µ –≤–∞—à–∏ –§–ò–û –∏ –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞ (–∏–∑ —Å–ø–∏—Å–∫–∞).\n'
            'üè† "–£—à—ë–ª" ‚Äî –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —É—Ö–æ–¥.\n'
            'üìñ "–°–ø—Ä–∞–≤–∫–∞" ‚Äî –ø–æ–≤—Ç–æ—Ä–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n\n'

            'üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: –ü—Ä–∏ –æ—Ç–º–µ—Ç–∫–µ –ø—Ä–∏—Ö–æ–¥–∞ –∏–ª–∏ —É—Ö–æ–¥–∞ –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–æ–±—â–∏—Ç –æ–± —ç—Ç–æ–º –≤ –æ–±—â–∏–π —á–∞—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.\n'
            'üë• –î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: –î–æ—Å—Ç—É–ø–Ω–∞ –∫–Ω–æ–ø–∫–∞ "–ö—Ç–æ –Ω–∞ —Ä–∞–±–æ—Ç–µ" –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ø–∏—Å–∫–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö. \n'
            '‚ö†Ô∏è –í–∞–∂–Ω–æ: –î–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∫–æ–º–ø–∞–Ω–∏–∏.\n\n'

            '–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è! üòä')

    await bot.send_message(chat_id=callback.message.chat.id, text=text, reply_markup=start_keyboard())


def registration_handler_register_user():
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤"""
    router.callback_query.register(registration_user_handler,
                                   text='registration')
    router.callback_query.register(handle_registration_name)
    router.callback_query.register(handle_registration_surname)
    router.callback_query.register(handle_registration_phone)
    router.callback_query.register(handle_registration_gender)
