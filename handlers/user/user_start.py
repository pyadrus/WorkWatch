# -*- coding: utf-8 -*-
from datetime import datetime

from aiogram import F
from aiogram.types import CallbackQuery
from loguru import logger

from database import (
    recording_working_start_or_end,
    AdminBlockUser,
    is_user_already_registered_today,
    get_registered_user,
)
from dispatcher import bot, router
from keyboards.keyboards import shops_keyboard_start, start_menu_keyboard

# –°–ª–æ–≤–∞—Ä—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π –º–µ–∂–¥—É callback.data –∏ –∞–¥—Ä–µ—Å–∞–º–∏ –º–∞–≥–∞–∑–∏–Ω–æ–≤
STORE_ADDRESSES = {
    "foundry_68": "–õ–∏—Ç–µ–π–Ω–∞—è 68",
    "nikitin_5": "–ù–∏–∫–∏—Ç–∏–Ω–∞ 5",
    "moscow_154b": "–ú–æ—Å–∫–æ–≤—Å–∫–∏–π 154–ë",
    "moscow_34": "–ú–æ—Å–∫–æ–≤—Å–∫–∏–π 34",
    "aviation_5A": "–ê–≤–∏–∞—Ü–∏–æ–Ω–Ω–∞—è 5–ê",
    "aviation_13a": "–ê–≤–∏–∞—Ü–∏–æ–Ω–Ω–∞—è 13–ê",
    "telmana_68A": "–¢–µ–ª—å–º–∞–Ω–∞ 68–ê",
    "he_strokina_2": "–û.–ù. –°—Ç—Ä–æ–∫–∏–Ω–∞ 2",
    "bezitskaya_356a": "–ë–µ–∂–∏—Ü–∫–∞—è 356–∞",
    "krakhmaleva_23": "–ö—Ä–∞—Ö–º–∞–ª—ë–≤–∞ 23",
    "pushkin_73": "–ü—É—à–∫–∏–Ω–∞ 73",
    "dukeeping_65": "–î—É–∫–∏ 65",
    "international_15": "–ò–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∞ 15",
    "international_25": "–ò–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∞ 25",
    "sosnovy_bor_1A": "–°–æ—Å–Ω–æ–≤—ã–π –±–æ—Ä 1–ê",
    "stanke_dimitrova_67": "–°—Ç–∞–Ω–∫–µ –î–∏–º–∏—Ç—Ä–æ–≤–∞ 67",
    "stanke_dimitrova_108b": "–°—Ç–∞–Ω–∫–µ –î–∏–º–∏—Ç—Ä–æ–≤–∞ 108–ë",
}


async def check_user_registration(callback_query):
    if is_user_already_registered_today(callback_query.from_user.id):
        await callback_query.message.answer(
            text="–í—ã —É–∂–µ –æ—Ç–º–µ—Ç–∏–ª–∏—Å—å —Å–µ–≥–æ–¥–Ω—è. –ü–æ–≤—Ç–æ—Ä–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞.",
            reply_markup=start_menu_keyboard(),
        )
        await callback_query.answer()
        return True  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
    return False  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω —Å–µ–≥–æ–¥–Ω—è


async def defining_event_by_gender(user, event_men, event_women):
    """
    ‚úÖ –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å–æ–±—ã—Ç–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–æ–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    :param user: –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param event_men: –º—É–∂—Å–∫–æ–π –≤–∞—Ä–∏–∞–Ω—Ç —Å–æ–±—ã—Ç–∏—è
    :param event_women: –∂–µ–Ω—Å–∫–∏–π –≤–∞—Ä–∏–∞–Ω—Ç —Å–æ–±—ã—Ç–∏—è
    :return event_user: —Å–æ–±—ã—Ç–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–æ–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    if user.gender == "–º—É–∂—Å–∫–æ–π":
        event_user: str = event_men
    elif user.gender == "–∂–µ–Ω—Å–∫–∏–π":
        event_user: str = event_women

    return event_user


async def send_user_registration_message(callback_query, store_address):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É

    :param callback_query: –æ–±—ä–µ–∫—Ç callback_query
    :param store_address: –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞
    """
    user = await get_registered_user(update=callback_query)
    event_user = await defining_event_by_gender(
        user=user, event_men="–ø—Ä–∏—à–µ–ª –Ω–∞ —Ä–∞–±–æ—Ç—É", event_women="–ø—Ä–∏—à–ª–∞ –Ω–∞ —Ä–∞–±–æ—Ç—É"
    )
    user_link = f"<a href='https://t.me/{user.username}'>{user.name} {user.surname}</a>"

    await bot.send_message(
        chat_id=-1002678330553,  # ID —á–∞—Ç–∞, –∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ
        text=(
            f"üë§ {user_link} {event_user}\n"
            f"üìç –ê–¥—Ä–µ—Å: {store_address}\n"
            f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {user.phone}\n"
            f"üïí –í—Ä–µ–º—è: {datetime.now().strftime('%H:%M')}\n"
            f"‚úÖ –ß–µ–∫ –ª–∏—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω"
        ),  # –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        parse_mode="HTML",  # –†–µ–∂–∏–º —Ä–∞–∑–º–µ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞
        disable_web_page_preview=True,  # –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    )
    return user.name, user.surname, user.phone, event_user


@router.callback_query(F.data == "at_work")
async def at_work(callback_query: CallbackQuery):
    """‚úÖ –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –º–∞–≥–∞–∑–∏–Ω–æ–≤ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è"""
    if (
        AdminBlockUser.select()
        .where(AdminBlockUser.block_id == callback_query.from_user.id)
        .first()
    ):
        logger.warning(
            f"–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback_query.from_user.id} –ø–æ–ø—ã—Ç–∞–ª—Å—è –≤–æ–π—Ç–∏"
        )
        await bot.send_message(
            chat_id=callback_query.from_user.id,
            text="‚ùå –í–∞–º –∑–∞–ø—Ä–µ—â—ë–Ω –¥–æ—Å—Ç—É–ø –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.",
        )
        return

    await bot.send_message(
        chat_id=callback_query.from_user.id,
        text="–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞",
        reply_markup=shops_keyboard_start(),
    )


@router.callback_query(F.data.in_(STORE_ADDRESSES.keys()))
async def handle_store_registration(callback_query: CallbackQuery):
    """‚úÖ –û–±—â–∏–π Handler –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –ª—é–±–æ–º—É –∞–¥—Ä–µ—Å—É –º–∞–≥–∞–∑–∏–Ω–∞"""
    if await check_user_registration(callback_query):
        return

    store_address = STORE_ADDRESSES[callback_query.data]
    name, surname, phone, event_user_start = await send_user_registration_message(
        callback_query, store_address
    )
    date_event = datetime.now()
    logger.warning(date_event)
    recording_working_start_or_end(
        callback_query,
        name,
        surname,
        store_address,
        phone,
        date_event=date_event,
        event_user_start=event_user_start,
        time_start=datetime.now(),
    )

    await bot.send_message(
        chat_id=callback_query.from_user.id,
        text="–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!",
        reply_markup=start_menu_keyboard(),
    )


def register_handlers_at_work():
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"""
    router.callback_query.register(at_work)
    router.callback_query.register(handle_store_registration)
