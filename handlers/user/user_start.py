# -*- coding: utf-8 -*-
from datetime import datetime

from aiogram import F
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery
from loguru import logger

from database import RegisterUserBot, db, recording_working_start, AdminBlockUser
from dispatcher import bot, router
from keyboards.keyboards import shops_keyboard_start, start_menu_keyboard


@router.callback_query(F.data == "at_work")
async def at_work(callback_query: CallbackQuery, state: FSMContext):
    """‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""

    id_user = callback_query.from_user.id  # id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    block = AdminBlockUser.select().where(AdminBlockUser.block_id == id_user).first()
    if block:
        logger.warning(f"–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {id_user} –ø–æ–ø—ã—Ç–∞–ª—Å—è –≤–æ–π—Ç–∏")
        await bot.send_message(
            chat_id=callback_query.from_user.id,
            text="‚ùå –í–∞–º –∑–∞–ø—Ä–µ—â—ë–Ω –¥–æ—Å—Ç—É–ø –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.",
        )
        return  # –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏

    await bot.send_message(
        chat_id=callback_query.from_user.id,
        text="–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞",
        reply_markup=shops_keyboard_start(),
    )


async def send_user_registration_message(callback_query, store_address):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É

    Args:
        callback_query (CallbackQuery): –û–±—ä–µ–∫—Ç –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        store_address (str): –ê–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞.

    Returns:
        None
    """
    db.create_tables([RegisterUserBot])
    user = (
        RegisterUserBot.select()
        .where(RegisterUserBot.id_user == callback_query.from_user.id)
        .first()
    )
    if user.gender == "–º—É–∂—Å–∫–æ–π":
        event_user = "–ø—Ä–∏—à–µ–ª –Ω–∞ —Ä–∞–±–æ—Ç—É"
    elif user.gender == "–∂–µ–Ω—Å–∫–∏–π":
        event_user = "–ø—Ä–∏—à–ª–∞ –Ω–∞ —Ä–∞–±–æ—Ç—É"

    user_link = f"<a href='https://t.me/{user.username}'>{user.name} {user.surname}</a>"

    await bot.send_message(
        chat_id=-1002678330553,  # ID —á–∞—Ç–∞, –∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ
        text=(
            f"üë§ {user_link} {event_user}\n"
            f"üìç –ê–¥—Ä–µ—Å: {store_address}\n"
            f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {user.phone}\n"
            f"üïí –í—Ä–µ–º—è: {datetime.now().strftime("%H:%M")}"
        ),  # –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        parse_mode="HTML",  # –†–µ–∂–∏–º —Ä–∞–∑–º–µ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞
        disable_web_page_preview=True,  # –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    )
    return user.name, user.surname, "–Ω–∞ —Ä–∞–±–æ—Ç–µ", user.phone


@router.callback_query(F.data == "foundry_68")
async def foundry_68(callback_query: CallbackQuery, state: FSMContext):
    """‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞ –õ–∏—Ç–µ–π–Ω–∞—è 68"""
    try:
        await bot.send_message(
            chat_id=callback_query.from_user.id,
            text="–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!",
            reply_markup=start_menu_keyboard(),
        )

        name, surname, event_user, phone = await send_user_registration_message(
            callback_query, "–õ–∏—Ç–µ–π–Ω–∞—è 68"
        )
        recording_working_start(
            callback_query, name, surname, event_user, "–õ–∏—Ç–µ–π–Ω–∞—è 68", phone
        )
    except Exception as e:
        logger.exception(e)


@router.callback_query(F.data == "nikitin_5")
async def nikitin_5(callback_query: CallbackQuery, state: FSMContext):
    """‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞ –ù–∏–∫–∏—Ç–∏–Ω–∞ 5"""
    await bot.send_message(
        chat_id=callback_query.from_user.id,
        text="–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!",
        reply_markup=start_menu_keyboard(),
    )
    name, surname, event_user, phone = await send_user_registration_message(
        callback_query, "–ù–∏–∫–∏—Ç–∏–Ω–∞ 5"
    )
    recording_working_start(
        callback_query, name, surname, event_user, "–ù–∏–∫–∏—Ç–∏–Ω–∞ 5", phone
    )


@router.callback_query(F.data == "moscow_154b")
async def moscow_154b(callback_query: CallbackQuery, state: FSMContext):
    """‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞ –ú–æ—Å–∫–æ–≤—Å–∫–∏–π 154–ë"""
    await bot.send_message(
        chat_id=callback_query.from_user.id,
        text="–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!",
        reply_markup=start_menu_keyboard(),
    )
    name, surname, event_user, phone = await send_user_registration_message(
        callback_query, "–ú–æ—Å–∫–æ–≤—Å–∫–∏–π 154–ë"
    )
    recording_working_start(
        callback_query, name, surname, event_user, "–ú–æ—Å–∫–æ–≤—Å–∫–∏–π 154–ë", phone
    )


@router.callback_query(F.data == "moscow_34")
async def moscow_34(callback_query: CallbackQuery, state: FSMContext):
    """‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞ –ú–æ—Å–∫–æ–≤—Å–∫–∏–π 34"""
    await bot.send_message(
        chat_id=callback_query.from_user.id,
        text="–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!",
        reply_markup=start_menu_keyboard(),
    )
    name, surname, event_user, phone = await send_user_registration_message(
        callback_query, "–ú–æ—Å–∫–æ–≤—Å–∫–∏–π 34"
    )
    recording_working_start(
        callback_query, name, surname, event_user, "–ú–æ—Å–∫–æ–≤—Å–∫–∏–π 34", phone
    )


@router.callback_query(F.data == "aviation_5A")
async def aviation_5A(callback_query: CallbackQuery, state: FSMContext):
    """‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞ –ê–≤–∏–∞—Ü–∏–æ–Ω–Ω–∞—è 5–ê"""
    await bot.send_message(
        chat_id=callback_query.from_user.id,
        text="–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!",
        reply_markup=start_menu_keyboard(),
    )
    name, surname, event_user, phone = await send_user_registration_message(
        callback_query, "–ê–≤–∏–∞—Ü–∏–æ–Ω–Ω–∞—è 5–ê"
    )
    recording_working_start(
        callback_query, name, surname, event_user, "–ê–≤–∏–∞—Ü–∏–æ–Ω–Ω–∞—è 5–ê", phone
    )


@router.callback_query(F.data == "aviation_13a")
async def aviation_13a(callback_query: CallbackQuery, state: FSMContext):
    """‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞ –ê–≤–∏–∞—Ü–∏–æ–Ω–Ω–∞—è 13–ê"""
    await bot.send_message(
        chat_id=callback_query.from_user.id,
        text="–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!",
        reply_markup=start_menu_keyboard(),
    )
    name, surname, event_user, phone = await send_user_registration_message(
        callback_query, "–ê–≤–∏–∞—Ü–∏–æ–Ω–Ω–∞—è 13–ê"
    )
    recording_working_start(
        callback_query, name, surname, event_user, "–ê–≤–∏–∞—Ü–∏–æ–Ω–Ω–∞—è 13–ê", phone
    )


@router.callback_query(F.data == "telmana_68A")
async def telmana_68A(callback_query: CallbackQuery, state: FSMContext):
    """‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞ –¢–µ–ª—å–º–∞–Ω–∞ 68–ê"""
    await bot.send_message(
        chat_id=callback_query.from_user.id,
        text="–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!",
        reply_markup=start_menu_keyboard(),
    )
    name, surname, event_user, phone = await send_user_registration_message(
        callback_query, "–¢–µ–ª—å–º–∞–Ω–∞ 68–ê"
    )
    recording_working_start(
        callback_query, name, surname, event_user, "–¢–µ–ª—å–º–∞–Ω–∞ 68–ê", phone
    )


@router.callback_query(F.data == "he_strokina_2")
async def he_strokina_2(callback_query: CallbackQuery, state: FSMContext):
    """‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞ –û.–ù. –°—Ç—Ä–æ–∫–∏–Ω–∞ 2"""
    await bot.send_message(
        chat_id=callback_query.from_user.id,
        text="–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!",
        reply_markup=start_menu_keyboard(),
    )
    name, surname, event_user, phone = await send_user_registration_message(
        callback_query, "–û.–ù. –°—Ç—Ä–æ–∫–∏–Ω–∞ 2"
    )
    recording_working_start(
        callback_query, name, surname, event_user, "–û.–ù. –°—Ç—Ä–æ–∫–∏–Ω–∞ 2", phone
    )


@router.callback_query(F.data == "bezitskaya_356a")
async def bezitskaya_356a(callback_query: CallbackQuery, state: FSMContext):
    """‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞ –ë–µ–∂–∏—Ü–∫–∞—è 356–∞"""
    await bot.send_message(
        chat_id=callback_query.from_user.id,
        text="–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!",
        reply_markup=start_menu_keyboard(),
    )
    name, surname, event_user, phone = await send_user_registration_message(
        callback_query, "–ë–µ–∂–∏—Ü–∫–∞—è 356–∞"
    )
    recording_working_start(
        callback_query, name, surname, event_user, "–ë–µ–∂–∏—Ü–∫–∞—è 356–∞", phone
    )


@router.callback_query(F.data == "krakhmaleva_23")
async def krakhmaleva_23(callback_query: CallbackQuery, state: FSMContext):
    """‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞ –ö—Ä–∞—Ö–º–∞–ª—ë–≤–∞ 23"""
    await bot.send_message(
        chat_id=callback_query.from_user.id,
        text="–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!",
        reply_markup=start_menu_keyboard(),
    )
    name, surname, event_user, phone = await send_user_registration_message(
        callback_query, "–ö—Ä–∞—Ö–º–∞–ª—ë–≤–∞ 23"
    )
    recording_working_start(
        callback_query, name, surname, event_user, "–ö—Ä–∞—Ö–º–∞–ª—ë–≤–∞ 23", phone
    )


@router.callback_query(F.data == "pushkin_73")
async def pushkin_73(callback_query: CallbackQuery, state: FSMContext):
    """‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞ –ü—É—à–∫–∏–Ω–∞ 73"""
    await bot.send_message(
        chat_id=callback_query.from_user.id,
        text="–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!",
        reply_markup=start_menu_keyboard(),
    )
    name, surname, event_user, phone = await send_user_registration_message(
        callback_query, "–ü—É—à–∫–∏–Ω–∞ 73"
    )
    recording_working_start(
        callback_query, name, surname, event_user, "–ü—É—à–∫–∏–Ω–∞ 73", phone
    )


@router.callback_query(F.data == "dukeeping_65")
async def dukeeping_65(callback_query: CallbackQuery, state: FSMContext):
    """‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞ –î—É–∫–∏ 65"""
    await bot.send_message(
        chat_id=callback_query.from_user.id,
        text="–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!",
        reply_markup=start_menu_keyboard(),
    )
    name, surname, event_user, phone = await send_user_registration_message(
        callback_query, "–î—É–∫–∏ 65"
    )
    recording_working_start(callback_query, name, surname, event_user, "–î—É–∫–∏ 65", phone)


@router.callback_query(F.data == "international_15")
async def international_15(callback_query: CallbackQuery, state: FSMContext):
    """‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞ –ò–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∞ 15"""
    await bot.send_message(
        chat_id=callback_query.from_user.id,
        text="–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!",
        reply_markup=start_menu_keyboard(),
    )
    name, surname, event_user, phone = await send_user_registration_message(
        callback_query, "–ò–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∞ 15"
    )
    recording_working_start(
        callback_query, name, surname, event_user, "–ò–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∞ 15", phone
    )


@router.callback_query(F.data == "international_25")
async def international_25(callback_query: CallbackQuery, state: FSMContext):
    """‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞ –ò–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∞ 25"""
    await bot.send_message(
        chat_id=callback_query.from_user.id,
        text="–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!",
        reply_markup=start_menu_keyboard(),
    )
    name, surname, event_user, phone = await send_user_registration_message(
        callback_query, "–ò–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∞ 25"
    )
    recording_working_start(
        callback_query, name, surname, event_user, "–ò–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∞ 25", phone
    )


@router.callback_query(F.data == "sosnovy_bor_1A")
async def sosnovy_bor_1A(callback_query: CallbackQuery, state: FSMContext):
    """‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞ –°–æ—Å–Ω–æ–≤—ã–π –±–æ—Ä 1–ê"""
    await bot.send_message(
        chat_id=callback_query.from_user.id,
        text="–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!",
        reply_markup=start_menu_keyboard(),
    )
    name, surname, event_user, phone = await send_user_registration_message(
        callback_query, "–°–æ—Å–Ω–æ–≤—ã–π –±–æ—Ä 1–ê"
    )
    recording_working_start(
        callback_query, name, surname, event_user, "–°–æ—Å–Ω–æ–≤—ã–π –±–æ—Ä 1–ê", phone
    )


@router.callback_query(F.data == "stanke_dimitrova_67")
async def stanke_dimitrova_67(callback_query: CallbackQuery, state: FSMContext):
    """‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞ –°—Ç–∞–Ω–∫–µ –î–∏–º–∏—Ç—Ä–æ–≤–∞ 67"""
    await bot.send_message(
        chat_id=callback_query.from_user.id,
        text="–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!",
        reply_markup=start_menu_keyboard(),
    )
    name, surname, event_user, phone = await send_user_registration_message(
        callback_query, "–°—Ç–∞–Ω–∫–µ –î–∏–º–∏—Ç—Ä–æ–≤–∞ 67"
    )
    recording_working_start(
        callback_query, name, surname, event_user, "–°—Ç–∞–Ω–∫–µ –î–∏–º–∏—Ç—Ä–æ–≤–∞ 67", phone
    )


@router.callback_query(F.data == "stanke_dimitrova_108b")
async def stanke_dimitrova_108b(callback_query: CallbackQuery, state: FSMContext):
    """‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞ –°—Ç–∞–Ω–∫–µ –î–∏–º–∏—Ç—Ä–æ–≤–∞ 108–ë"""
    await bot.send_message(
        chat_id=callback_query.from_user.id,
        text="–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!",
        reply_markup=start_menu_keyboard(),
    )
    name, surname, event_user, phone = await send_user_registration_message(
        callback_query, "–°—Ç–∞–Ω–∫–µ –î–∏–º–∏—Ç—Ä–æ–≤–∞ 108–ë"
    )
    recording_working_start(
        callback_query, name, surname, event_user, "–°—Ç–∞–Ω–∫–µ –î–∏–º–∏—Ç—Ä–æ–≤–∞ 108–ë", phone
    )


def register_handlers_at_work():
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö—ç–Ω–¥–ª–µ—Ä–æ–≤, –Ω–∞ —Ä–∞–±–æ—Ç–µ"""
    router.callback_query.register(at_work, text="at_work")
    router.callback_query.register(foundry_68, text="foundry_68")
    router.callback_query.register(nikitin_5, text="nikitin_5")
    router.callback_query.register(moscow_154b, text="moscow_154b")
    router.callback_query.register(moscow_34, text="moscow_34")
    router.callback_query.register(aviation_5A, text="aviation_5A")
    router.callback_query.register(aviation_13a, text="aviation_13a")
    router.callback_query.register(telmana_68A, text="telmana_68A")
    router.callback_query.register(he_strokina_2, text="he_strokina_2")
    router.callback_query.register(bezitskaya_356a, text="bezitskaya_356a")
    router.callback_query.register(krakhmaleva_23, text="krakhmaleva_23")
    router.callback_query.register(pushkin_73, text="pushkin_73")
    router.callback_query.register(dukeeping_65, text="dukeeping_65")
    router.callback_query.register(international_15, text="international_15")
    router.callback_query.register(international_25, text="international_25")
    router.callback_query.register(sosnovy_bor_1A, text="sosnovy_bor_1A")
    router.callback_query.register(stanke_dimitrova_67, text="stanke_dimitrova_67")
    router.callback_query.register(stanke_dimitrova_108b, text="stanke_dimitrova_108b")
