# -*- coding: utf-8 -*-
from datetime import datetime

from aiogram import F
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery
from loguru import logger

from database import RegisterUserBot, db, recording_working_start
from dispatcher import bot, router
from keyboards import shops_keyboard_end, start_menu_keyboard


@router.callback_query(F.data == "left")
async def left(callback_query: CallbackQuery, state: FSMContext):
    """‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    await bot.send_message(
        chat_id=callback_query.from_user.id,
        text="–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞",
        reply_markup=shops_keyboard_end(),
    )


async def send_user_registration_message_end(callback_query, store_address) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É

    Args:
        callback_query (CallbackQuery): –û–±—ä–µ–∫—Ç –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        store_address (str): –ê–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞.

    Returns:
        None
    """
    db.create_tables([RegisterUserBot])
    user = (
        RegisterUserBot.select()
        .where(RegisterUserBot.id_user == callback_query.from_user.id)
        .first()
    )

    if user.gender == "–º—É–∂—Å–∫–æ–π":
        event_user = "–ø–æ–∫–∏–Ω—É–ª —Ä–∞–±–æ—Ç—É"
    elif user.gender == "–∂–µ–Ω—Å–∫–∏–π":
        event_user = "–ø–æ–∫–∏–Ω—É–ª–∞ —Ä–∞–±–æ—Ç—É"

    now = datetime.now().strftime("%H:%M")
    user_link = f"<a href='https://t.me/{user.username}'>{user.name} {user.surname}</a>"
    text = (
        f"üë§ {user_link} {event_user}\n"
        f"üìç –ê–¥—Ä–µ—Å: {store_address}\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {user.phone}\n"
        f"üïí –í—Ä–µ–º—è: {now}"
    )
    await bot.send_message(
        chat_id=-1002678330553,  # ID —á–∞—Ç–∞, –∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ
        text=text,  # –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        parse_mode="HTML",  # –†–µ–∂–∏–º —Ä–∞–∑–º–µ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞
        disable_web_page_preview=True,  # –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    )
    return user.name, user.surname, "–ø–æ–∫–∏–Ω—É–ª —Ä–∞–±–æ—Ç—É", user.phone


@router.callback_query(F.data == "foundry_68_end")
async def foundry_68_end(callback_query: CallbackQuery, state: FSMContext):
    """‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞ –õ–∏—Ç–µ–π–Ω–∞—è 68"""
    try:
        await bot.send_message(
            chat_id=callback_query.from_user.id,
            text="–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!",
            reply_markup=start_menu_keyboard(),
        )
        name, surname, event_user, phone = await send_user_registration_message_end(
            callback_query, "–õ–∏—Ç–µ–π–Ω–∞—è 68"
        )
        recording_working_start(
            callback_query, name, surname, event_user, "–õ–∏—Ç–µ–π–Ω–∞—è 68", phone
        )
    except Exception as e:
        logger.exception(e)


@router.callback_query(F.data == "nikitin_5_end")
async def nikitin_5_end(callback_query: CallbackQuery, state: FSMContext):
    """‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞ –ù–∏–∫–∏—Ç–∏–Ω–∞ 5"""
    await bot.send_message(
        chat_id=callback_query.from_user.id,
        text="–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!",
        reply_markup=start_menu_keyboard(),
    )
    name, surname, event_user, phone = await send_user_registration_message_end(
        callback_query, "–ù–∏–∫–∏—Ç–∏–Ω–∞ 5"
    )
    recording_working_start(
        callback_query, name, surname, event_user, "–ù–∏–∫–∏—Ç–∏–Ω–∞ 5", phone
    )


@router.callback_query(F.data == "moscow_154b_end")
async def moscow_154b_end(callback_query: CallbackQuery, state: FSMContext):
    """‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞ –ú–æ—Å–∫–æ–≤—Å–∫–∏–π 154–ë"""
    await bot.send_message(
        chat_id=callback_query.from_user.id,
        text="–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!",
        reply_markup=start_menu_keyboard(),
    )
    name, surname, event_user, phone = await send_user_registration_message_end(
        callback_query, "–ú–æ—Å–∫–æ–≤—Å–∫–∏–π 154–ë"
    )
    recording_working_start(
        callback_query, name, surname, event_user, "–ú–æ—Å–∫–æ–≤—Å–∫–∏–π 154–ë", phone
    )


@router.callback_query(F.data == "moscow_34_end")
async def moscow_34_end(callback_query: CallbackQuery, state: FSMContext):
    """‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞ –ú–æ—Å–∫–æ–≤—Å–∫–∏–π 34"""
    await bot.send_message(
        chat_id=callback_query.from_user.id,
        text="–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!",
        reply_markup=start_menu_keyboard(),
    )
    name, surname, event_user, phone = await send_user_registration_message_end(
        callback_query, "–ú–æ—Å–∫–æ–≤—Å–∫–∏–π 34"
    )
    recording_working_start(
        callback_query, name, surname, event_user, "–ú–æ—Å–∫–æ–≤—Å–∫–∏–π 34", phone
    )


@router.callback_query(F.data == "aviation_5A_end")
async def aviation_5A_end(callback_query: CallbackQuery, state: FSMContext):
    """‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞ –ê–≤–∏–∞—Ü–∏–æ–Ω–Ω–∞—è 5–ê"""
    await bot.send_message(
        chat_id=callback_query.from_user.id,
        text="–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!",
        reply_markup=start_menu_keyboard(),
    )
    name, surname, event_user, phone = await send_user_registration_message_end(
        callback_query, "–ê–≤–∏–∞—Ü–∏–æ–Ω–Ω–∞—è 5–ê"
    )
    recording_working_start(
        callback_query, name, surname, event_user, "–ê–≤–∏–∞—Ü–∏–æ–Ω–Ω–∞—è 5–ê", phone
    )


@router.callback_query(F.data == "aviation_13a_end")
async def aviation_13a_end(callback_query: CallbackQuery, state: FSMContext):
    """‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞ –ê–≤–∏–∞—Ü–∏–æ–Ω–Ω–∞—è 13–ê"""
    await bot.send_message(
        chat_id=callback_query.from_user.id,
        text="–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!",
        reply_markup=start_menu_keyboard(),
    )
    name, surname, event_user, phone = await send_user_registration_message_end(
        callback_query, "–ê–≤–∏–∞—Ü–∏–æ–Ω–Ω–∞—è 13–ê"
    )
    recording_working_start(
        callback_query, name, surname, event_user, "–ê–≤–∏–∞—Ü–∏–æ–Ω–Ω–∞—è 13–ê", phone
    )


@router.callback_query(F.data == "telmana_68A_end_end")
async def telmana_68A_end_end(callback_query: CallbackQuery, state: FSMContext):
    """‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞ –¢–µ–ª—å–º–∞–Ω–∞ 68–ê"""
    await bot.send_message(
        chat_id=callback_query.from_user.id,
        text="–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!",
        reply_markup=start_menu_keyboard(),
    )
    name, surname, event_user, phone = await send_user_registration_message_end(
        callback_query, "–¢–µ–ª—å–º–∞–Ω–∞ 68–ê"
    )
    recording_working_start(
        callback_query, name, surname, event_user, "–¢–µ–ª—å–º–∞–Ω–∞ 68–ê", phone
    )


@router.callback_query(F.data == "he_strokina_2_end")
async def he_strokina_2_end(callback_query: CallbackQuery, state: FSMContext):
    """‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞ –û.–ù. –°—Ç—Ä–æ–∫–∏–Ω–∞ 2"""
    await bot.send_message(
        chat_id=callback_query.from_user.id,
        text="–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!",
        reply_markup=start_menu_keyboard(),
    )
    name, surname, event_user, phone = await send_user_registration_message_end(
        callback_query, "–û.–ù. –°—Ç—Ä–æ–∫–∏–Ω–∞ 2"
    )
    recording_working_start(
        callback_query, name, surname, event_user, "–û.–ù. –°—Ç—Ä–æ–∫–∏–Ω–∞ 2", phone
    )


@router.callback_query(F.data == "bezitskaya_356a_end")
async def bezitskaya_356a_end(callback_query: CallbackQuery, state: FSMContext):
    """‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞ –ë–µ–∂–∏—Ü–∫–∞—è 356–∞"""
    await bot.send_message(
        chat_id=callback_query.from_user.id,
        text="–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!",
        reply_markup=start_menu_keyboard(),
    )
    name, surname, event_user, phone = await send_user_registration_message_end(
        callback_query, "–ë–µ–∂–∏—Ü–∫–∞—è 356–∞"
    )
    recording_working_start(
        callback_query, name, surname, event_user, "–ë–µ–∂–∏—Ü–∫–∞—è 356–∞", phone
    )


@router.callback_query(F.data == "krakhmaleva_23_end")
async def krakhmaleva_23_end(callback_query: CallbackQuery, state: FSMContext):
    """‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞ –ö—Ä–∞—Ö–º–∞–ª—ë–≤–∞ 23"""
    await bot.send_message(
        chat_id=callback_query.from_user.id,
        text="–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!",
        reply_markup=start_menu_keyboard(),
    )
    name, surname, event_user, phone = await send_user_registration_message_end(
        callback_query, "–ö—Ä–∞—Ö–º–∞–ª—ë–≤–∞ 23"
    )
    recording_working_start(
        callback_query, name, surname, event_user, "–ö—Ä–∞—Ö–º–∞–ª—ë–≤–∞ 23", phone
    )


@router.callback_query(F.data == "pushkin_73_end")
async def pushkin_73_end(callback_query: CallbackQuery, state: FSMContext):
    """‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞ –ü—É—à–∫–∏–Ω–∞ 73"""
    await bot.send_message(
        chat_id=callback_query.from_user.id,
        text="–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!",
        reply_markup=start_menu_keyboard(),
    )
    name, surname, event_user, phone = await send_user_registration_message_end(
        callback_query, "–ü—É—à–∫–∏–Ω–∞ 73"
    )
    recording_working_start(
        callback_query, name, surname, event_user, "–ü—É—à–∫–∏–Ω–∞ 73", phone
    )


@router.callback_query(F.data == "dukeeping_65_end")
async def dukeeping_65_end(callback_query: CallbackQuery, state: FSMContext):
    """‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞ –î—É–∫–∏ 65"""
    await bot.send_message(
        chat_id=callback_query.from_user.id,
        text="–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!",
        reply_markup=start_menu_keyboard(),
    )
    name, surname, event_user, phone = await send_user_registration_message_end(
        callback_query, "–î—É–∫–∏ 65"
    )
    recording_working_start(callback_query, name, surname, event_user, "–î—É–∫–∏ 65", phone)


@router.callback_query(F.data == "international_15_end")
async def international_15_end(callback_query: CallbackQuery, state: FSMContext):
    """‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞ –ò–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∞ 15"""
    await bot.send_message(
        chat_id=callback_query.from_user.id,
        text="–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!",
        reply_markup=start_menu_keyboard(),
    )
    name, surname, event_user, phone = await send_user_registration_message_end(
        callback_query, "–ò–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∞ 15"
    )
    recording_working_start(
        callback_query, name, surname, event_user, "–ò–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∞ 15", phone
    )


@router.callback_query(F.data == "international_25_end")
async def international_25_end(callback_query: CallbackQuery, state: FSMContext):
    """‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞ –ò–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∞ 25"""
    await bot.send_message(
        chat_id=callback_query.from_user.id,
        text="–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!",
        reply_markup=start_menu_keyboard(),
    )
    name, surname, event_user, phone = await send_user_registration_message_end(
        callback_query, "–ò–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∞ 25"
    )
    recording_working_start(
        callback_query, name, surname, event_user, "–ò–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∞ 25", phone
    )


@router.callback_query(F.data == "sosnovy_bor_1A_end")
async def sosnovy_bor_1A_end(callback_query: CallbackQuery, state: FSMContext):
    """‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞ –°–æ—Å–Ω–æ–≤—ã–π –±–æ—Ä 1–ê"""
    await bot.send_message(
        chat_id=callback_query.from_user.id,
        text="–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!",
        reply_markup=start_menu_keyboard(),
    )
    name, surname, event_user, phone = await send_user_registration_message_end(
        callback_query, "–°–æ—Å–Ω–æ–≤—ã–π –±–æ—Ä 1–ê"
    )
    recording_working_start(
        callback_query, name, surname, event_user, "–°–æ—Å–Ω–æ–≤—ã–π –±–æ—Ä 1–ê", phone
    )


@router.callback_query(F.data == "stanke_dimitrova_67_end")
async def stanke_dimitrova_67_end(callback_query: CallbackQuery, state: FSMContext):
    """‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞ –°—Ç–∞–Ω–∫–µ –î–∏–º–∏—Ç—Ä–æ–≤–∞ 67"""
    await bot.send_message(
        chat_id=callback_query.from_user.id,
        text="–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!",
        reply_markup=start_menu_keyboard(),
    )
    name, surname, event_user, phone = await send_user_registration_message_end(
        callback_query, "–°—Ç–∞–Ω–∫–µ –î–∏–º–∏—Ç—Ä–æ–≤–∞ 67"
    )
    recording_working_start(
        callback_query, name, surname, event_user, "–°—Ç–∞–Ω–∫–µ –î–∏–º–∏—Ç—Ä–æ–≤–∞ 67", phone
    )


@router.callback_query(F.data == "stanke_dimitrova_108b_end")
async def stanke_dimitrova_108b_end(callback_query: CallbackQuery, state: FSMContext):
    """‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞ –°—Ç–∞–Ω–∫–µ –î–∏–º–∏—Ç—Ä–æ–≤–∞ 108–ë"""
    await bot.send_message(
        chat_id=callback_query.from_user.id,
        text="–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!",
        reply_markup=start_menu_keyboard(),
    )
    name, surname, event_user, phone = await send_user_registration_message_end(
        callback_query, "–°—Ç–∞–Ω–∫–µ –î–∏–º–∏—Ç—Ä–æ–≤–∞ 108–ë"
    )
    recording_working_start(
        callback_query, name, surname, event_user, "–°—Ç–∞–Ω–∫–µ –î–∏–º–∏—Ç—Ä–æ–≤–∞ 108–ë", phone
    )


def register_handlers_left():
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö—ç–Ω–¥–ª–µ—Ä–æ–≤, –∫—Ç–æ –ø–æ–∫–∏–Ω—É–ª —Ä–∞–±–æ—Ç—É"""
    router.callback_query.register(left, text="at_work")
    router.callback_query.register(foundry_68_end, text="foundry_68_end")
    router.callback_query.register(nikitin_5_end, text="nikitin_5_end")
    router.callback_query.register(moscow_154b_end, text="moscow_154b_end")
    router.callback_query.register(moscow_34_end, text="moscow_34_end")
    router.callback_query.register(aviation_5A_end, text="aviation_5A_end")
    router.callback_query.register(aviation_13a_end, text="aviation_13a_end")
    router.callback_query.register(telmana_68A_end_end, text="telmana_68A_end_end")
    router.callback_query.register(he_strokina_2_end, text="he_strokina_2_end")
    router.callback_query.register(bezitskaya_356a_end, text="bezitskaya_356a_end")
    router.callback_query.register(krakhmaleva_23_end, text="krakhmaleva_23_end")
    router.callback_query.register(pushkin_73_end, text="pushkin_73_end")
    router.callback_query.register(dukeeping_65_end, text="dukeeping_65_end")
    router.callback_query.register(international_15_end, text="international_15_end")
    router.callback_query.register(international_25_end, text="international_25_end")
    router.callback_query.register(sosnovy_bor_1A_end, text="sosnovy_bor_1A_end")
    router.callback_query.register(
        stanke_dimitrova_67_end, text="stanke_dimitrova_67_end"
    )
    router.callback_query.register(
        stanke_dimitrova_108b_end, text="stanke_dimitrova_108b_end"
    )
