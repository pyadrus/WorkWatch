# -*- coding: utf-8 -*-
from datetime import datetime

from aiogram import F
from aiogram.types import CallbackQuery
from loguru import logger

from database import RegisterUserBot, db, recording_working_start_or_end, AdminBlockUser
from dispatcher import bot, router
from handlers.user.user_start import (
    defining_event_by_gender,
    reads_table_with_registered_users,
)
from keyboards.keyboards import shops_keyboard_end, start_menu_keyboard


@router.callback_query(F.data == "left")
async def left(callback_query: CallbackQuery):
    """‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    id_user = callback_query.from_user.id  # id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    block = AdminBlockUser.select().where(AdminBlockUser.block_id == id_user).first()
    if block:
        logger.warning(f"–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {id_user} –ø–æ–ø—ã—Ç–∞–ª—Å—è –≤–æ–π—Ç–∏")
        await bot.send_message(
            chat_id=callback_query.from_user.id,
            text="‚ùå –í–∞–º –∑–∞–ø—Ä–µ—â—ë–Ω –¥–æ—Å—Ç—É–ø –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.",
        )
        return  # –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏

    await bot.send_message(
        chat_id=callback_query.from_user.id,
        text="–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞",
        reply_markup=shops_keyboard_end(),
    )


async def send_user_registration_message_end(callback_query, store_address):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É

    Args:
        callback_query (CallbackQuery): –û–±—ä–µ–∫—Ç –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        store_address (str): –ê–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞.

    Returns:
        None
    """
    user = await reads_table_with_registered_users(callback_query)
    event_user = await defining_event_by_gender(
        user=user, event_men="–ø–æ–∫–∏–Ω—É–ª —Ä–∞–±–æ—Ç—É", event_women="–ø–æ–∫–∏–Ω—É–ª —Ä–∞–±–æ—Ç—É"
    )
    user_link = f"<a href='https://t.me/{user.username}'>{user.name} {user.surname}</a>"
    await bot.send_message(
        chat_id=-1002678330553,  # ID —á–∞—Ç–∞, –∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ
        text=(
            f"üë§ {user_link} {event_user}\n"
            f"üìç –ê–¥—Ä–µ—Å: {store_address}\n"
            f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {user.phone}\n"
            f"üïí –í—Ä–µ–º—è: {datetime.now().strftime("%H:%M")}"
        ),  # –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        parse_mode="HTML",  # –†–µ–∂–∏–º —Ä–∞–∑–º–µ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞
        disable_web_page_preview=True,  # –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    )
    return user.name, user.surname, event_user, user.phone


# –°–ª–æ–≤–∞—Ä—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π –º–µ–∂–¥—É callback.data –∏ –∞–¥—Ä–µ—Å–∞–º–∏ –º–∞–≥–∞–∑–∏–Ω–æ–≤
STORE_ADDRESSES_END = {
    "foundry_68_end": "–õ–∏—Ç–µ–π–Ω–∞—è 68",
    "nikitin_5_end": "–ù–∏–∫–∏—Ç–∏–Ω–∞ 5",
    "moscow_154b_end": "–ú–æ—Å–∫–æ–≤—Å–∫–∏–π 154–ë",
    "moscow_34_end": "–ú–æ—Å–∫–æ–≤—Å–∫–∏–π 34",
    "aviation_5A_end": "–ê–≤–∏–∞—Ü–∏–æ–Ω–Ω–∞—è 5–ê",
    "aviation_13a_end": "–ê–≤–∏–∞—Ü–∏–æ–Ω–Ω–∞—è 13–ê",
    "telmana_68A_end_end": "–¢–µ–ª—å–º–∞–Ω–∞ 68–ê",
    "he_strokina_2_end": "–û.–ù. –°—Ç—Ä–æ–∫–∏–Ω–∞ 2",
    "bezitskaya_356a_end": "–ë–µ–∂–∏—Ü–∫–∞—è 356–∞",
    "krakhmaleva_23_end": "–ö—Ä–∞—Ö–º–∞–ª—ë–≤–∞ 23",
    "pushkin_73_end": "–ü—É—à–∫–∏–Ω–∞ 73",
    "dukeeping_65_end": "–î—É–∫–∏ 65",
    "international_15_end": "–ò–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∞ 15",
    "international_25_end": "–ò–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∞ 25",
    "sosnovy_bor_1A_end": "–°–æ—Å–Ω–æ–≤—ã–π –±–æ—Ä 1–ê",
    "stanke_dimitrova_67_end": "–°—Ç–∞–Ω–∫–µ –î–∏–º–∏—Ç—Ä–æ–≤–∞ 67",
    "stanke_dimitrova_108b_end": "–°—Ç–∞–Ω–∫–µ –î–∏–º–∏—Ç—Ä–æ–≤–∞ 108–ë",
}


@router.callback_query(F.data.in_(STORE_ADDRESSES_END.keys()))
async def handle_store_end(callback_query: CallbackQuery):
    """‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å–º–µ–Ω—ã –¥–ª—è –≤—Å–µ—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤"""
    await bot.send_message(
        chat_id=callback_query.from_user.id,
        text="–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!",
        reply_markup=start_menu_keyboard(),
    )

    store_address = STORE_ADDRESSES_END[callback_query.data]
    name, surname, event_user_end, phone = await send_user_registration_message_end(
        callback_query, store_address
    )

    recording_working_start_or_end(
        callback_query,
        name,
        surname,
        store_address,
        phone,
        event_user_end=event_user_end,
        time_end=datetime.now(),
    )


def register_handlers_left():
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö—ç–Ω–¥–ª–µ—Ä–æ–≤, –∫—Ç–æ –ø–æ–∫–∏–Ω—É–ª —Ä–∞–±–æ—Ç—É"""
    router.callback_query.register(left, text="at_work")
    router.callback_query.register(handle_store_end)
